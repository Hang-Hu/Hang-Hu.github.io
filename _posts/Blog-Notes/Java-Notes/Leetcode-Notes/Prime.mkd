## 204. Count Primes

### Description

```
Count the number of prime numbers less than a non-negative number, n.

Example:

Input: 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.
```

### Final Solution

Mark off prime*n like 2n, 3n, 5n, ...

```
class Solution {
    public int countPrimes(int n) {
        if(n<=2) return 0;
        boolean[] notPrime = new boolean[n]; // use 1 to n-1, ignore index 0, assume everyone is prime
        // stop in i*i<n, because if n is 14 when it comes to i>3.8, it's 7*2, to mark off 7*7, it's bigger than n
        for(int i=2; i*i<n; i++){
            // if i is not a prime, like 6, then 2 or 3 already marked off 6n
            if(notPrime[i]==false){ // i is a prime, mark off i*n
                    // if i is 5, mark off 5n. start from 5*5 as 5*4 has been marked off already by 2
                   for(int j=i*i; j<n; j+=i){
                       notPrime[j] = true;
                   }
            }
        }
        // 2n, 3n, ... all marked off once
        int count = 0;
        for(int i=2; i<n; i++){
            if(notPrime[i]==false) count++;
        }
        return count;
    }
}
```