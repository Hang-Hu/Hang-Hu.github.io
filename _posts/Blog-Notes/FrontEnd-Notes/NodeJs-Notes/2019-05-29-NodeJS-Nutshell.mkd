---
layout: post
author: Hang Hu
categories: nodejs
tags: Blog FrontEnd NodeJs 
cover: 
---
### read json from file

```
const auth = require('../resource/auth.json');
```


Or 


```
const path = require("path");
const newsArr = JSON.parse(fs.readFileSync(path.join(__dirname, "news.json")));
```


### write list to file


```

function writeArray(fileName, arr){
    let file = fs.createWriteStream(fileName);
    file.on('error', function(err){
        console.error(err);
    });
    arr.forEach((element) => {
        file.write(`${element}\n`);
    });
    file.end();
}
```


### get environment variable


```
process.env.NODE_PATH
```


### project directory


Set project directory to be environment variable `NODE_PATH`.


Node's Modules system looks for modules in a variety of locations. One of these locations is wherever `process.env.NODE_PATH` points. If you set this environmental variable(ie. in package.json scripts start, use `export NODE_PATH=$(pwd)`), then you can `require` modules with the standard module loader ***without any other changes***.


#### require usage


```
var auth = require("resource/1point_auth.json");
```


This will look for `NODE_PATH/resource/1point_auth.json`.


#### get path as string


```
const COOKIEPATH = path.join(process.env.NODE_PATH, "/resource/cookies.json");
```


A better way is to just use the relative path and NodeJS can automatically parse it to be under project root, like the two examples below.


```
const COOKIEPATH = "resource/cookies.json";
jsonfile.writeFile(COOKIEPATH, COOKIES, { spaces: 2 }, err => {
    if (err) {
        console.log(
            `Failed to write cookies to ${COOKIEPATH}.\n${err}`
        );
    }
    console.log(`Cookies has been save to ${COOKIEPATH}`);
});
```


```
await this.page.screenshot({
    path: `check-in-${moment().format("YYYY-MM-DD")}.png`,
});
```


### command line args


`process.argv` is `string[]`.


`process.argv[0]` is `node`.


`process.argv[1]` is filename following node.


Others are the args.


[process.argv nodejs doc](https://nodejs.org/docs/latest/api/process.html# process_process_argv)


### Use proxy

```
const es = require('elasticsearch');
const proxy = require('https-proxy-agent');
var KEY = '*************************************************';
var PROXYURL = 'URL:PORT';
var readEndPoint = 'http://USERNAME:PASSWORD@URL:PORT';
var nodeAgent = new proxy('https://USERNAME:' + KEY + '@' + PROXYURL);
var client = new es.Client({
    host: readEndPoint,
    log: 'trace',
    requestTimeout: 50000,
    createNodeAgent: () => nodeAgent
});
```
