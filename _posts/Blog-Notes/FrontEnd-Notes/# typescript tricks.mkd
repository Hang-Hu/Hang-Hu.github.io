# typescript tricks

## type casting

```
const userDisplay = ReactDOM.findDOMNode(this.refs.user) as HTMLElement;
const userDisplay = <HTMLElement>ReactDOM.findDOMNode(this.refs.user);
```

## If props used but state not

```
export default class Todo extends React.Component<TodoProps>
```

## method signature in props

```
onTagsChange(tags: []): void;
```

## type of an array of array, where 0 is string and 1 is number

```
[string, number][]
```

or

```
Array<[string, number]>
```

## type of `` function

```
private render: ((params?: any) => React.ReactNode) | undefined;
```

## type of an object

```
name: {firstName: string, lastName: string}
```

## type of a property in interface

```
interface PersonInterface {
    name: {firstName: string, lastName: string}
}
```

```
name: PersonInterface["name"]
```

## type of a Map

```
Map<string, string>
```
