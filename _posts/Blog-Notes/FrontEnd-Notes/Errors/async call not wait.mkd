## Description

I have an async call in `constructor`, and after new class I call a `run` function. However, `run` doesn't wait for async in `constructor` to finish.

## Reason

```
(async () => {
    await func1();
    await func2();
})();
run(){
    (async () => {
        await func3();
    })();    
}
```

Obviously func2 won't wait for func1, it's executed as soon as the previous async call returns. The same logic applis to constructor.

## Solution

Put `func1` out of `constructor` in an async function, call it in the same async bracket as `func2`.

```
async asyncInitFunc(){
    await func1();
    await func2();
}
run(){
    (async () => {
        await asyncInitFunc();
        await func3();
    })();    
}
```