## grid: bar chart position

Bistance between axis and chart border: `grid`

```
grid: {
    left: '30',
    right: '30',
    top: '30',
    bottom: '30',
    containLabel: true
}
```

## series.barMaxWidth: bar width (`barMaxWidth` and `barWidth`)

```
series: [
    {
        type: 'bar',
        barMaxWidth: '50'
    }
]
```

## series.itemStyle.normal.color: new echarts.graphic.LinearGradient, gradually changing color

```
series: [
    {
        type: 'bar',
        data: seriesData,
        itemStyle: {
            normal: {
                color: new echarts.graphic.LinearGradient(
                    0, 0, 0, 1,
                    [
                        {offset: 0, color: '#0096c0'},
                        {offset: 1, color: '#33bdea'}
                    ]
                )
            }
        }
    }
],
```

## title.textStyle: title style: `textStyle`

```
title: {
    text: 'Chart A',
    textStyle: {
        fontWeight: 'normal',
        color: 'black',
        fontSize: '20'
    }
}
```

## yAxis.axisLine.show.false: yAxis no axis line

```
yAxis: {
    axisLine: {
        : false
    }
}
```

## yAxis.interval: interval in y axis

```
yAxis: {
    interval: 10
}
```

## grid.height: echarts height

```
grid: {
    height: '300'
}
```

## number displayed in bar: `series.itemStyle.label`


```
series: [
    {
        type: 'bar',
        data: seriesData,
        itemStyle: {
            normal: {
                label: {
                    show: true, //show number
                    position: 'insideTop'// position of number
                }
            }
        }
    }
],
```

## series.center: pie chart position

`50%`(center) is the horizontal position, `58%` is the vertical position.

```
series:[
    {
        center: ['50%', '58%']
    }
]
```

## legend.formatter: dynamic text for upper different types

```
legend: {
    formatter: (params): string => {
        for (const entry of option.series[0].data) {
            if (entry.params === params) {
                return `${params}: ${entry.value}`;
            }
        }
    }
}
```

## series.color: color of each bar

```
series: [
    {
        type: 'bar'
        data: data
        color: function(params){
            return palette[params.dataIndex % palette.length];
        }
    }
]
```

## backgroundColor: background color of the chart

```
backgroundColor: grey
```

## tooltip.formatter: customized popup text

```
tooltip: {
    formatter: `{a} <br/>{b}: {c} ({d}%)<br />${addtionalText}`
}
```

## emphasis.label.textStyle: highlight label by bigger bold font when hovering

```
emphasis: {
    label: {
        textStyle: {
            fontSize: 16,
            fontWeight: 'bold'
        }
    }
}
```