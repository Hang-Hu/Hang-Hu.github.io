## Reason

The float property is ignored in a flex container.

From the flexbox specification:

```
3. Flex Containers: the flex and inline-flex display values

A flex container establishes a new flex formatting context for its contents. This is the same as establishing a block formatting context, except that flex layout is used instead of block layout.

For example, floats do not intrude into the flex container, and the flex containerâ€™s margins do not collapse with the margins of its contents.

float and clear do not create floating or clearance of flex item, and do not take it out-of-flow.
```



## Solution

Use `margin-left: auto` to make child1 right and `order: 2` to prevent child2 be put to the right.

```
<div class="container">
    <span class="child1"></span>
    <span class="child2"></span>
</div>
```

```
.container {
    display: flex;
}
.child1 {
    margin-left: auto;
    order: 2;
}
```

Note that, although float won't work in flex container, but if subContainer is inside flex container, and child in subContainer uses float, it works however.

```
<div class="container">
    <span class="subContainer">
        <span class="child">Title</span>
        <span class="child">Content here</span>
    </span>
</div>
```

```
.container {
    display: flex;
}
.container .subContainer .child{
    float: right;
}
```

## Reference

[making-a-flex-item-float-right](https://stackoverflow.com/questions/36182635/making-a-flex-item-float-right/36182782)

[w3 flex-containers](https://www.w3.org/TR/css-flexbox-1/#flex-containers)