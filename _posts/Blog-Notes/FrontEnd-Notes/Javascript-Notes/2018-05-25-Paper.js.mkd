---
layout: post
author: Hang Hu
categories: javascript
tags: Blog FrontEnd Javascript 
cover: 
---
### Bind circle to keypress

```
window.addEventListener("keypress", function(eventObj){
	for(var i=0; i<keyBindList.length; i++){
		var kBind = keyBindList[i];
		if(kBind.key === eventObj.key || kBind.keyCode === eventObj.keyCode){
			//draw circle
			var x = Math.floor(Math.random() * (window.innerWidth + 1));// [0, window.innerWidth]
			var y = Math.floor(Math.random() * (window.innerHeight + 1));// [0, window.innerHeight]
			var circle = new paper.Path.Circle(new paper.Point(x, y), 500);
			circle.fillColor = kBind.color;
			paper.view.draw();
			//play sound
			return;
		}
	}
});
```


[http://paperjs.org/tutorials/paths/creating-predefined-shapes/](Circle)


### Shrink circle animation


```
paper.view.onFrame = function(event){
	paper.project.activeLayer.children.forEach(function(item){
		item.scale(0.9);
	});
}
```


["http://paperjs.org/tutorials/project-items/transforming-items/"](transforming-items)

[http://paperjs.org/tutorials/animation/creating-animations/](creating-animations)


### use direct js with paper.js onFrame


In direct Javascript instead of Paperscript, `onFrame` must be binded to `paper.view`.


```
window.addEventListener("load", init);
function init(){
	canvasDisplay = document.querySelector("# myCanvas");

	paper.setup(canvasDisplay);
	paper.view.onFrame = function(event){
		paper.project.activeLayer.children.forEach(function(item){
			item.scale(0.9);
		});
	}
}
```


[http://paperjs.org/tutorials/getting-started/using-javascript-directly/](using-javascript-directly)


### Active element in canvas


```
paper.project.activeLayer.children
```


### Remove first created PaperText on keypress


```
window.addEventListener("keypress", function(eventObj){
	if(paper.project.activeLayer.children[0] instanceof paper.PointText){
		paper.project.activeLayer.children[0].remove();	
	}
});
```


### Remove circle if area < 1


```
for(var i=0; i<circleList.length; i++){
	if(circleList[i].area < 1){
		circleList[i].remove();//remove from canvas
		circleList.splice(i, 1);// remove from circleList
		i--;
	}
}
```


### Text on canvas


```
var text = new paper.PointText({
	point: paper.view.center,
	content: "Press any Key from A to Z",
	fillColor: "red",
	// strokeColor: "blue",//border color
	justification: 'center',
	fontSize: 50
});
```


[http://paperjs.org/reference/pointtext](PointText)


### Change color with hue


```
circleList[i].fillColor.hue += 1;
```


