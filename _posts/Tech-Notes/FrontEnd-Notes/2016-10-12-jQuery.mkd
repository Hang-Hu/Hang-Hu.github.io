---
layout: post
author: Hang Hu
categories: frontend
tags: FrontEnd 
cover: 
---

Now we're ready to learn jQuery, the most popular JavaScript tool of all time.  
### CDN

```
<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
```
### script

Your browser will run any JavaScript inside a script element, including jQuery.
```
<script>
</script>
```
### functions,such as addClass()

The important thing to know is that code you put inside this function will run as soon as your browser has loaded your page.  
This is important because without your document ready function, your code may run before your HTML is rendered, which would cause bugs.  
All jQuery functions start with a $, usually referred to as a dollar sign operator, or as bling.  
jQuery often selects an HTML element with a selector, then does something to that element.  
For example, let's make all of your button elements bounce. Just add this code inside your document ready function:  
```
$("button").addClass("animated bounce");
```
Note that we've already included both the jQuery library and the Animate.css library in the background so that you can use them in the editor. So you are using jQuery to apply the Animate.css bounce class to your button elements.  

```
<script>
  $(document).ready(function() {
    $("button").addClass("animated bounce");
  });
</script>
```
### classes for addClass()

#### animated

##### shake

##### bounce

##### fadeOut

##### hinge

### target element by type

```
$("button").addClass("animated bounce");
```
### target element with class .well

```
$(".well").addClass("animated shake");

```
### target element by id

Note that, just like with CSS declarations, you type a # before the id's name.  

```
$("# target3").addClass("animated fadeOut");

```
### function removeClass()

```
$("button").removeClass("btn-default");
```
### function css()

jQuery has a function called .css() that allows you to change the CSS of an element.
```
$("# target1").css("color","red")

```
### function prop()

jQuery has a function called .prop() that allows you to adjust the properties of elements.
When you disable a button, it will become grayed-out and can no longer be clicked.
```
$("# target1").prop("disabled","true");

```
### function html()

jQuery has a function called .html() that lets you add HTML <strong>tags and text</strong> within an element. Any content previously within the element will be completely replaced with the content you provide using this function.    
```
$("#target4").html("<em># target4</em>")

```
### function text()

jQuery also has a similar function called .text() that only alters text without adding tags. In other words, this function will not evaluate any HTML tags passed to it, but will instead treat it as the text you want to replace the existing content with.
### function remove()

Used for removing element.
```
$("# target4").remove();

```
### function appenTo()

Move #target2 from one element to another with id # right-well

```
    $("#target2").appendTo("# right-well");

```
### function clone()

To copy element from one place to another,clone() is usually used with appendTo()
```
    $("#target5").clone().appendTo("# left-well");

```
### function parent()

Every HTML element has a parent element from which it inherits properties.  

For example, your jQuery Playground h3 element has the parent element of ```<div class="container-fluid">```, which itself has the parent body.

Give the parent of the # target1 element a background-color of red:  

```
    $("# target1").parent().css("background-color","blue");

```
### function children()

Access the children of whichever element you've selected.
```
    $("# right-well").children().css("color","orange");

```
### css selector target:nth-child(n)

Make the second child in each of your well elements bounce. 
```
    $(".target:nth-child(2)").addClass("animated bounce");
```
You must target the children of element with the target class.
```
  <div class="row">
    <div class="col-xs-6">
      <h4># left-well</h4>

      <div class="well" id="left-well">
        <button class="btn btn-default target" id="target1"># target1</button>

        <button class="btn btn-default target" id="target2"># target2</button>

        <button class="btn btn-default target" id="target3"># target3</button>

      </div>
    </div>
    <div class="col-xs-6">
      <h4># right-well</h4>

      <div class="well" id="right-well">
        <button class="btn btn-default target" id="target4"># target4</button>

        <button class="btn btn-default target" id="target5"># target5</button>

        <button class="btn btn-default target" id="target6"># target6</button>

      </div>
    </div>
  </div>
```
### selector target:odd()

Note that jQuery is zero-indexed, meaning that, counter-intuitively, :odd selects the second element, fourth element, and so on.  
```
    $(".target:odd").addClass("animated shake");
```

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###

###
