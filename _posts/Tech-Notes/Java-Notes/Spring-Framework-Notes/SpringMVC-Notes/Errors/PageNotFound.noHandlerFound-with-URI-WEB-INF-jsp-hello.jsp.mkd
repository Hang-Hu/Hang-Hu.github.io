#PageNotFound.noHandlerFound with URI [/WEB-INF/jsp/hello.jsp]
##Reason
My access to `localhost/user/hello` calls UserController's sayHello method and it returns "hello", which is resolved to `/WEB-INF/jsp/hello.jsp` by 'InternalResourceViewResolver' set in springmvc-servlet.xml inside `WEB-INF`.  
This issues another request, which will be handled the same as the first request. Yes, it will be handled by JSP servlet.  
However, I set DispatcherServlet to handle all request using `/*`, which also catches jsp request to JSP servlet. Then DispatcherServlet finds no mapping for `/WEB-INF/jsp/hello.jsp` in its controllers.
##Solution1
Change `/*` to `/`, so it handles request after JSP servlet catches its jsp request.
```
<servlet-mapping>
	<servlet-name>springmvc</servlet-name>
	<url-pattern>/</url-pattern>
</servlet-mapping>
```
However, in this way interceptor in SpringMVC can't intercept request to jsp files and add header to response.
##Solution2
Use `default-servlet-handler` to handle jsp request catched by DispatcherServlet.
```
<mvc:default-servlet-handler/>
```
##More
###Use JSP servlet to handle html
Add this in `web.xml`
```
<servlet-mapping>
    <servlet-name>jsp</servlet-name>
    <url-pattern>*.html</url-pattern>
</servlet-mapping>
```
###Use DispatcherServlet to handle static resources like images, css, js, html.  
springmvc-servlet.xml
```
 <mvc:resources mapping="/static/**" location="/WEB-INF/static/" />
```
demo.html
```
<h1>Page with image</h1>
<img src="/static/img/image.jpg"/>
```

